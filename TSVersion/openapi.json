{
  "openapi": "3.0.3",
  "info": {
    "title": "Salamanca Island Project - EPICS IEEE (STUDENTS API)",
    "description": "This is an educational project to teach English to high school students, with a special focus on children with visual impairments. You can find out more about at [https://swagger.io](https://swagger.io). In this iteration of the project, we've switched to the design first approach!\n(Podríamos incluir donaciones <la idea me la dió la página XD>).\n\nSome useful links:\n- [Organization github](https://github.com/Proyecto-Final-EPICS)\n- [The landing-Page](https://proyecto-final-epics.github.io/EyeLand)",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io",
      "name": "Leonardo D. Lizcano Pinto",
      "url": "https://www.linkedin.com/in/leonardo-lizcano-pinto0220/"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "0.5.5"
  },
  "externalDocs": {
    "description": "Find out more about the project at our github repository.",
    "url": "https://github.com/Proyecto-Final-EPICS/Salamanca-Island-mobile-API"
  },
  "servers": [
    {
      "url": "https://epics-si-api.onrender.com/api/students"
    }
  ],
  "tags": [
    {
      "name": "task",
      "description": "Everything about the Tasks"
    },
    {
      "name": "answer",
      "description": "About send the answers"
    },
    {
      "name": "user",
      "description": "Operations about user"
    }
  ],
  "paths": {
    "/tasks": {
      "get": {
        "description": "Get all tasks.",
        "tags": [
          "task"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Task"
                  },
                  "type": "array"
                }
              }
            }
          },
          "400": {
            "description": "Invalid number supplied."
          },
          "401": {
            "description": "You are not authorized to access this content."
          },
          "404": {
            "description": "Task not found."
          },
          "500": {
            "description": "Server Error."
          }
        }
      }
    },
    "/tasks/{taskOrder}/introduction": {
      "get": {
        "description": "Get a specific task.",
        "tags": [
          "task"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "name": "taskOrder",
            "in": "path",
            "required": true,
            "description": "The number of the task to return.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 5
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Introduction"
                }
              }
            }
          },
          "400": {
            "description": "Invalid number supplied."
          },
          "401": {
            "description": "You are not authorized to access this content."
          },
          "404": {
            "description": "Task not found."
          },
          "500": {
            "description": "Server error."
          }
        }
      }
    },
    "/tasks/{taskOrder}/attempt": {
      "post": {
        "description": "Start new task attempt.",
        "tags": [
          "task"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "name": "taskOrder",
            "in": "path",
            "required": true,
            "description": "The number of the task to return.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 5
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/StudentAttempt"
                  },
                  {
                    "$ref": "#/components/schemas/TeamAttempt"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "idTaskAttempt": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The id of the task attempt (should be stored and used for PreTask)."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid number supplied."
          },
          "401": {
            "description": "You are not authorized to access this content."
          },
          "404": {
            "description": "Task not found."
          },
          "500": {
            "description": "Server error."
          }
        }
      }
    },
    "/tasks/{taskOrder}/pretask": {
      "get": {
        "description": "Get the pretask based on the number of the Task.",
        "tags": [
          "task"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "name": "taskOrder",
            "in": "path",
            "required": true,
            "description": "The number of the task.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 5
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PreTask"
                }
              }
            }
          },
          "400": {
            "description": "Invalid number supplied."
          },
          "401": {
            "description": "You are not authorized to access this content."
          },
          "404": {
            "description": "Task not found."
          },
          "500": {
            "description": "Server Error."
          }
        }
      }
    },
    "/tasks/{taskOrder}/pretask/questions": {
      "get": {
        "description": "Get the a summary of the questions of the PreTask based on the number of the Task.",
        "tags": [
          "task"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "name": "taskOrder",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The number of the task."
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionsCount"
                }
              }
            }
          },
          "400": {
            "description": "Invalid number supplied."
          },
          "401": {
            "description": "You are not authorized to access this content."
          },
          "404": {
            "description": "Task not found."
          },
          "500": {
            "description": "Server Error."
          }
        }
      }
    },
    "/tasks/{taskOrder}/pretask/questions/{taskAttemptId}": {
      "get": {
        "description": "Get the duringTask question based on the number of the Task and the number of the question inside the task",
        "tags": [
          "task"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "name": "taskOrder",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The number of the task."
          },
          {
            "name": "taskAttemptId",
            "in": "path",
            "required": true,
            "description": "The ID of the current attempt of the task (it is returned when starting a task)",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionPreTask"
                }
              }
            }
          },
          "400": {
            "description": "Invalid number supplied."
          },
          "401": {
            "description": "You are not authorized to access this content."
          },
          "404": {
            "description": "Task not found."
          },
          "500": {
            "description": "Server Error."
          }
        }
      }
    },
    "/tasks/{taskOrder}/duringtask": {
      "get": {
        "description": "Get the pretask based on the number of the Task.",
        "tags": [
          "task"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "name": "taskOrder",
            "in": "path",
            "required": true,
            "description": "The number of the task.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 5
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DuringTask"
                }
              }
            }
          },
          "400": {
            "description": "Invalid number supplied."
          },
          "401": {
            "description": "You are not authorized to access this content."
          },
          "404": {
            "description": "Task not found."
          },
          "500": {
            "description": "Server Error."
          }
        }
      }
    },
    "/tasks/{taskOrder}/duringtask/questions": {
      "get": {
        "description": "Get the a summary of the questions of the DuringTask based on the number of the Task.",
        "tags": [
          "task"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "name": "taskOrder",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The number of the task."
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionsCount"
                }
              }
            }
          },
          "400": {
            "description": "Invalid number supplied."
          },
          "401": {
            "description": "You are not authorized to access this content."
          },
          "404": {
            "description": "Task not found."
          },
          "500": {
            "description": "Server Error."
          }
        }
      }
    },
    "/tasks/{taskOrder}/duringtask/questions/{questionOrder}": {
      "get": {
        "description": "Get the DuringTask question based on the number of the Task and the number of the question inside the task",
        "tags": [
          "task"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "name": "taskOrder",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The number of the task."
          },
          {
            "name": "questionOrder",
            "in": "path",
            "required": true,
            "description": "The number of the question inside the task",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionDuringTask"
                }
              }
            }
          },
          "400": {
            "description": "Invalid number supplied."
          },
          "401": {
            "description": "You are not authorized to access this content."
          },
          "404": {
            "description": "Task not found."
          },
          "500": {
            "description": "Server Error."
          }
        }
      }
    },
    "/tasks/{taskOrder}/postask": {
      "get": {
        "description": "Get the pretask based on the number of the Task.",
        "tags": [
          "task"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "name": "taskOrder",
            "in": "path",
            "required": true,
            "description": "The number of the task.",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 5
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PosTask"
                }
              }
            }
          },
          "400": {
            "description": "Invalid number supplied."
          },
          "401": {
            "description": "You are not authorized to access this content."
          },
          "404": {
            "description": "Task not found."
          },
          "500": {
            "description": "Server Error."
          }
        }
      }
    },
    "/tasks/{taskOrder}/postask/questions": {
      "get": {
        "description": "Get the a summary of the questions of the pretask based on the number of the Task.",
        "tags": [
          "task"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "name": "taskOrder",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The number of the task."
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionsCount"
                }
              }
            }
          },
          "400": {
            "description": "Invalid number supplied."
          },
          "401": {
            "description": "You are not authorized to access this content."
          },
          "404": {
            "description": "Task not found."
          },
          "500": {
            "description": "Server Error."
          }
        }
      }
    },
    "/tasks/{taskOrder}/postask/questions/{questionOrder}": {
      "get": {
        "description": "Get the PosTask question based on the number of the Task and the number of the question inside the task",
        "tags": [
          "task"
        ],
        "security": [
          {
            "api_key": []
          }
        ],
        "parameters": [
          {
            "name": "taskOrder",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "description": "The number of the task."
          },
          {
            "name": "questionOrder",
            "in": "path",
            "required": true,
            "description": "The number of the question inside the task",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionPosTask"
                }
              }
            }
          },
          "400": {
            "description": "Invalid number supplied."
          },
          "401": {
            "description": "You are not authorized to access this content."
          },
          "404": {
            "description": "Task not found."
          },
          "500": {
            "description": "Server Error."
          }
        }
      }
    },
    "/login": {
      "post": {
        "description": "Endpoint to login students",
        "tags": [
          "user"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/UserLogin"
        },
        "responses": {
          "200": {
            "description": "Logged successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "userToken": {
                      "type": "string"
                    },
                    "hasGroup": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/login-group": {
      "post": {
        "description": "Endpoint to login a student to a group",
        "tags": [
          "user"
        ],
        "requestBody": {
          "required": true,
          "description": "The token or id or idk of the group to join",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Task": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "taskOrder": {
            "type": "integer",
            "format": "int64",
            "description": "The number of the task (1, 2, 3, 4, 5)"
          },
          "completed": {
            "type": "boolean",
            "description": "If the task was completed successfully"
          },
          "thumbnail": {
            "type": "string",
            "description": "The url of the thumbnail of the task"
          }
        }
      },
      "Introduction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "taskOrder": {
            "type": "integer",
            "format": "int64",
            "description": "The number of the task (1, 2, 3, 4, 5)"
          },
          "thumbnail": {
            "type": "string",
            "description": "The url of the thumbnail of the task"
          },
          "keywords": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "longDescription": {
            "type": "string"
          }
        }
      },
      "Attempt": {
        "type": "object",
        "properties": {
          "idTask": {
            "type": "integer",
            "format": "int64"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "taskPhase": {
            "type": "string",
            "enum": ["pretask", "duringtask", "postask"]
          }
        }
      },
      "TeamAttempt": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Attempt"
          },
          {
            "type": "object",
            "properties": {
              "idTeam": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "StudentAttempt": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Attempt"
          },
          {
            "type": "object",
            "properties": {
              "idStudent": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "PreTask": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "numQuestions": {
            "type": "integer",
            "format": "int64"
          },
          "links": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "topic": {
                  "type": "string",
                  "description": "A topic to describe the link"
                },
                "url": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "DuringTask": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "numQuestions": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "PosTask": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "numQuestions": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "QuestionsCount": {
        "type": "object",
        "properties": {
          "numQuestions": {
            "type": "integer"
          },
          "availableQuestions": {
            "type": "integer",
            "description": "The number of questions available for the task"
          }
        }
      },
      "Question": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "content": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "imgAlt": {
            "type": "string",
            "description": "The message on the image"
          },
          "imgUrl": {
            "type": "string"
          },
          "options": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "content": {
                  "type": "string"
                },
                "correct": {
                  "type": "boolean"
                },
                "feedback": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "QuestionPreTask": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Question"
          },
          {
            "type": "object",
            "properties": {}
          }
        ]
      },
      "QuestionDuringTask": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Question"
          },
          {
            "type": "object",
            "properties": {
              "audioUrl": {
                "type": "string"
              },
              "videoUrl": {
                "type": "string"
              }
            }
          }
        ]
      },
      "QuestionPosTask": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Question"
          },
          {
            "type": "object",
            "properties": {
              "audioUrl": {
                "type": "string"
              },
              "videoUrl": {
                "type": "string"
              }
            }
          }
        ]
      },
      "LoginForm": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      }
    },
    "requestBodies": {
      "UserLogin": {
        "description": "List of user object",
        "required": true,
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/LoginForm"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "api_key": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}